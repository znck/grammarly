{
  "name": "grammarly",
  "publisher": "znck",
  "displayName": "Grammarly",
  "description": "Grammarly grammar checking for Visual Studio Code.",
  "version": "0.12.1",
  "icon": "assets/logo.png",
  "engines": {
    "vscode": "^1.41.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/znck/grammarly"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:plaintext",
    "onLanguage:markdown",
    "onLanguage:mdx",
    "onCommand:grammarly.check",
    "onCommand:grammarly.setCredentials",
    "onCommand:grammarly.grammarly.clearCredentials",
    "onCommand:grammarly.setGoals"
  ],
  "contributes": {
    "configuration": {
      "title": "Grammarly",
      "properties": {
        "grammarly.autoActivate": {
          "scope": "resource",
          "type": "boolean",
          "description": "Enable Grammarly service when a supported document is opened.",
          "default": true
        },
        "grammarly.audience": {
          "scope": "resource",
          "enum": [
            "general",
            "knowledgeable",
            "expert"
          ],
          "default": "knowledgeable",
          "enumDescriptions": [
            "Easy for anyone to read with minimal effort.",
            "Requires focus to read and understand.",
            "May require rereading to understand."
          ]
        },
        "grammarly.dialect": {
          "scope": "resource",
          "enum": [
            "american",
            "british"
          ],
          "default": "american",
          "enumDescriptions": [
            "English (US)",
            "English (UK)"
          ]
        },
        "grammarly.domain": {
          "scope": "resource",
          "enum": [
            "academic",
            "business",
            "general",
            "technical",
            "casual",
            "creative"
          ],
          "default": "general",
          "enumDescriptions": [
            "Strictly applies all rules and formal writing conventions.",
            "Applies almost all rules, but allow some informal expressions.",
            "Applies most rules and conventions with medium strictness.",
            "Applies almost all rules, plus technical writing conventions.",
            "Applies most rules, but allow stylistic flexibility.",
            "Allows some intentional bending of rules and conventions."
          ]
        },
        "grammarly.emotions": {
          "markdownDescription": "**Experimental.** How do you want to sound?",
          "scope": "resource",
          "type": "array",
          "items": {
            "enum": [
              "neutral",
              "confident",
              "joyful",
              "optimistic",
              "respectful",
              "urgent",
              "friendly",
              "analytical"
            ],
            "enumDescriptions": [
              "üòê Neutral",
              "ü§ù Confident",
              "üôÇ Joyful",
              "‚úåÔ∏è Optimistic",
              "ü§ó Friendly",
              "‚è∞ Urgent",
              "üìä Analytical",
              "üôå Respectful"
            ]
          },
          "default": []
        },
        "grammarly.goals": {
          "markdownDescription": "**Experimental.** What are you trying to do?",
          "scope": "resource",
          "type": "array",
          "items": {
            "enum": [
              "inform",
              "describe",
              "convince",
              "tellStory"
            ],
            "enumDescriptions": [
              "Inform",
              "Describe",
              "Convince",
              "Tell A Story"
            ]
          },
          "default": []
        },
        "grammarly.overrides": {
          "description": "Per document override for audience, dialect, domain, emotions and goals.",
          "scope": "resource",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "files": {
                "description": "List of files or glob patterns.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "config": {
                "type": "object",
                "properties": {
                  "audience": {
                    "enum": [
                      "general",
                      "knowledgeable",
                      "expert"
                    ],
                    "enumDescriptions": [
                      "Easy for anyone to read with minimal effort.",
                      "Requires focus to read and understand.",
                      "May require rereading to understand."
                    ]
                  },
                  "dialect": {
                    "enum": [
                      "american",
                      "british"
                    ],
                    "enumDescriptions": [
                      "English (US)",
                      "English (UK)"
                    ]
                  },
                  "domain": {
                    "enum": [
                      "academic",
                      "business",
                      "general",
                      "technical",
                      "casual",
                      "creative"
                    ],
                    "enumDescriptions": [
                      "Strictly applies all rules and formal writing conventions.",
                      "Applies almost all rules, but allow some informal expressions.",
                      "Applies most rules and conventions with medium strictness.",
                      "Applies almost all rules, plus technical writing conventions.",
                      "Applies most rules, but allow stylistic flexibility.",
                      "Allows some intentional bending of rules and conventions."
                    ]
                  },
                  "emotions": {
                    "markdownDescription": "**Experimental.** How do you want to sound? This helps us build new suggestions and won't affect your feedback today.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "neutral",
                        "confident",
                        "joyful",
                        "optimistic",
                        "respectful",
                        "urgent",
                        "friendly",
                        "analytical"
                      ],
                      "enumDescriptions": [
                        "üòê Neutral",
                        "ü§ù Confident",
                        "üôÇ Joyful",
                        "‚úåÔ∏è Optimistic",
                        "ü§ó Friendly",
                        "‚è∞ Urgent",
                        "üìä Analytical",
                        "üôå Respectful"
                      ]
                    }
                  },
                  "goals": {
                    "markdownDescription": "**Experimental.** What are you trying to do? This helps us build new suggestions and won't affect your feedback today.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "inform",
                        "describe",
                        "convince",
                        "tellStory"
                      ],
                      "enumDescriptions": [
                        "Inform",
                        "Describe",
                        "Convince",
                        "Tell A Story"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "grammarly.ignore": {
          "scope": "resource",
          "description": "Ignored files.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/node_modules/**/*"
          ]
        },
        "grammarly.userWords": {
          "description": "A list of words as a local dictionary.",
          "scope": "resource",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "grammarly.diagnostics": {
          "type": "object",
          "properties": {
            "[markdown]": {
              "type": "object",
              "properties": {
                "ignore": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "[markdown]": {
              "ignore": [
                "code"
              ]
            }
          }
        },
        "grammarly.severity": {
          "type": "object",
          "scope": "resource",
          "description": "A mapping from Grammarly alert categories to VS Code diagnostics severity.",
          "additionalProperties": {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "enumDescriptions": [
              "Error",
              "Warning",
              "Info",
              "Hint"
            ]
          }
        }
      }
    },
    "commands": [
      {
        "command": "grammarly.check",
        "title": "Check grammar errors",
        "category": "Grammarly"
      },
      {
        "command": "grammarly.setCredentials",
        "title": "Login to grammarly.com",
        "category": "Grammarly"
      },
      {
        "command": "grammarly.clearCredentials",
        "title": "Logout of grammarly.com",
        "category": "Grammarly"
      },
      {
        "command": "grammarly.setGoals",
        "title": "Set document goals",
        "category": "Grammarly"
      }
    ]
  },
  "license": "MIT",
  "main": "./out/extension.js",
  "scripts": {
    "vscode:prepublish": "npm run build",
    "prebuild:test": "rm -rf out-test",
    "build:test": "tsc -p test/tsconfig.json",
    "build": "rollup -c",
    "watch": "rollup -c --watch",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "pretest": "npm run build:test",
    "test": "node scripts/runTests"
  },
  "devDependencies": {
    "@rollup/plugin-alias": "^3.0.1",
    "@rollup/plugin-commonjs": "^11.0.2",
    "@rollup/plugin-json": "^4.0.2",
    "@rollup/plugin-node-resolve": "^7.1.1",
    "@types/chai": "^4.2.11",
    "@types/debug": "^4.1.5",
    "@types/keytar": "^4.4.2",
    "@types/lodash.debounce": "^4.0.6",
    "@types/minimatch": "^3.0.3",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.11.0",
    "@types/node-fetch": "^2.5.5",
    "@types/turndown": "^5.0.0",
    "@types/ws": "^7.2.3",
    "chai": "^4.2.0",
    "fast-glob": "^3.2.2",
    "lint-staged": "^10.1.2",
    "mocha": "^7.1.1",
    "prettier": "^2.0.4",
    "rollup": "^2.3.4",
    "rollup-plugin-typescript": "^1.0.1",
    "standard-version": "^7.1.0",
    "tslib": "^1.11.1",
    "typescript": "^3.8.3",
    "vscode": "^1.1.36",
    "vscode-test": "^1.3.0",
    "yorkie": "^2.0.0"
  },
  "dependencies": {
    "@flatten-js/interval-tree": "^1.0.10",
    "bufferutil": "^4.0.1",
    "debug": "^4.1.1",
    "html-to-md": "^0.3.2",
    "inversify": "^5.0.1",
    "lodash.debounce": "^4.0.8",
    "memoize-one": "^5.1.1",
    "minimatch": "^3.0.4",
    "node-fetch": "^2.6.0",
    "reflect-metadata": "^0.1.13",
    "remark": "^12.0.0",
    "supports-color": "^7.1.0",
    "utf-8-validate": "^5.0.2",
    "vscode-languageclient": "6.1.3",
    "vscode-languageserver": "6.1.1",
    "vscode-languageserver-protocol": "^3.15.3",
    "vscode-languageserver-textdocument": "^1.0.1",
    "ws": "^7.2.3"
  },
  "gitHooks": {
    "pre-commit": "lint-staged"
  },
  "lint-staged": {
    "*.{js,ts,json,yml}": "prettier --write"
  }
}
